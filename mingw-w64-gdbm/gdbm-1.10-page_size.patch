--- a/src/gdbmsetopt.c	Fri Feb 14 01:28:43 2014
+++ b/src/gdbmsetopt.c	Mon Apr 03 09:56:41 2017
@@ -21,6 +21,8 @@
 
 #include "gdbmdefs.h"
 
+#include <windows.h>
+
 /* operate on an already open descriptor. */
 
 static int
@@ -188,7 +190,9 @@
       case GDBM_SETMAXMAPSIZE:
 #if HAVE_MMAP
 	{
-	  size_t page_size = sysconf (_SC_PAGESIZE);
+	  SYSTEM_INFO info;
+	  GetSystemInfo(&info);
+	  size_t page_size = info.dwPageSize;
 
 	  if (get_size (optval, optlen, &sz))
 	    return -1;
--- a/src/mmap.c	Fri Feb 14 01:28:43 2014
+++ b/src/mmap.c	Mon Apr 03 09:56:08 2017
@@ -26,6 +26,7 @@
 # include <sys/stat.h>
 # include <sys/mman.h>
 # include <stdio.h>
+# include <windows.h>
 
 /* Some systems fail to define this */
 # ifndef MAP_FAILED
@@ -80,7 +82,10 @@
 {
   void *p;
   int flags = PROT_READ;
-  size_t page_size = sysconf (_SC_PAGESIZE);
+
+  SYSTEM_INFO info;
+  GetSystemInfo(&info);
+  size_t page_size = info.dwPageSize;
 
   munmap (dbf->mapped_region, dbf->mapped_size);
   dbf->mapped_size = size;
--- a/tests/gtopt.c	Thu Aug 11 11:45:54 2011
+++ b/tests/gtopt.c	Mon Apr 03 09:57:19 2017
@@ -22,6 +22,7 @@
 #include <assert.h>
 #include "gdbmdefs.h"
 #include "progname.h"
+#include <windows.h>
 
 const char *progname;
 const char *dbname;
@@ -178,7 +179,10 @@
 int
 test_maxmapsize (void *valptr)
 {
-  size_t page_size = sysconf (_SC_PAGESIZE);
+  SYSTEM_INFO info;
+  GetSystemInfo(&info);
+  size_t page_size = info.dwPageSize;
+
   size_t expected_size = ((mapped_size_max + page_size - 1) / page_size) *
 	                          page_size;
   return (*(size_t*) valptr == expected_size) ? RES_PASS : RES_FAIL;
